import type { Plugin } from 'vite';
import components from 'unplugin-vue-components/vite';
import { PrimeVueResolver } from 'unplugin-vue-components/resolvers';

export interface ConfigOptions {
  dirs?: string[];
  dts?: string;
  resolvers?: {
    primevue?: boolean;
  };
}

export default function plugin(options: ConfigOptions = {}): Plugin {
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  const config: Record<string, any> = {
    dts: options.dts ?? './types/autogenerated/components.d.ts',
    dirs: ['./src/components', ...(options.dirs ?? [])],
    extensions: ['vue'],
    deep: true,
    version: 3
  };

  if (options.resolvers?.primevue) {
    config.resolvers = [PrimeVueResolver({ prefix: 'P' })];
  }

  return components(config);
}
